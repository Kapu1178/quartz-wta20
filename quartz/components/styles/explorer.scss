@use "../../styles/variables.scss" as *;

@media all and ($mobile) {
  .page > #quartz-body {
    // Shift page position when toggling Explorer on mobile.
    & > :not(.sidebar.left:has(.explorer)) {
      transition: transform 300ms ease-in-out;
    }
    &.lock-scroll > :not(.sidebar.left:has(.explorer)) {
      transform: translateX(100dvw);
      transition: transform 300ms ease-in-out;
    }

    // Sticky top bar (stays in place when scrolling down on mobile).
    .sidebar.left:has(.explorer) {
      box-sizing: border-box;
      position: sticky;
      background-color: var(--light);
      padding: 1rem 0 1rem 0;
      margin: 0;
    }

    .hide-until-loaded ~ .explorer-content {
      display: none;
    }
  }
}

.explorer-toggle {
  h2 {
    font-family: var(--bodyFont);
  }
  svg {
    color: var(--tertiary);
  }
}

.explorer {
  --file-text-color: rgb(188, 202, 216);
  --file-text-active-color: rgb(229, 235, 238);

  --folder-text-color: rgb(188, 202, 216);
  --folder-text-active-color: rgb(188, 202, 216);

  --folder-icon-color: rgb(134, 55, 55);
  --folder-icon-open-color: rgb(224, 88, 88);


  display: flex;
  flex-direction: column;
  overflow-y: hidden;

  min-height: 1.2rem;
  flex: 0 1 auto;
  &.collapsed {
    flex: 0 1 1.2rem;
    & .fold {
      transform: rotateZ(-90deg);
    }
  }

  & .fold {
    margin-left: 0.5rem;
    transition: transform 0.3s ease;
    opacity: 0.8;
  }

  @media all and ($mobile) {
    order: -1;
    height: initial;
    overflow: hidden;
    flex-shrink: 0;
    align-self: flex-start;
    margin-top: auto;
    margin-bottom: auto;
  }

  button.mobile-explorer {
    display: none;
  }

  button.desktop-explorer {
    display: flex;
  }

  @media all and ($mobile) {
    button.mobile-explorer {
      display: flex;
    }

    button.desktop-explorer {
      display: none;
    }
  }

  &.desktop-only {
    @media all and not ($mobile) {
      display: flex;
    }
  }

  svg {
    pointer-events: all;
    transition: transform 0.35s ease;

    & > polyline {
      pointer-events: none;
    }
  }
}

button.mobile-explorer,
button.desktop-explorer {
  background-color: transparent;
  border: none;
  text-align: left;
  cursor: pointer;
  padding: 0;
  color: var(--file-text-color);
  display: flex;
  align-items: center;

  & h2 {
    font-size: 1rem;
    display: inline-block;
    margin: 0;
  }
}

.explorer-content {
  list-style: none;
  overflow: hidden;
  overflow-y: auto;
  margin-top: 0.5rem;

  & ul {
    list-style: none;
    margin: 0;
    padding: 0;
    overscroll-behavior: contain;

    .file-item {
      &:has(a.active),
      &:has(a:hover) {
        background: rgb(101, 33, 33);
      }
    }
  
    .file-container {
      // padding-left: 0.8rem;
    }

    .file-title {
      color: var(--file-text-color);
      font-weight: 500;
      pointer-events: all;

      &.active,
      &:hover {
        font-weight: bold;
        color: var(--file-text-active-color) !important;
      }
    }
  }

  .folder-outer {
    display: grid;
    grid-template-rows: 0fr;
    transition: grid-template-rows 0.3s ease-in-out;
  }

  .folder-outer.open {
    grid-template-rows: 1fr;
  }

  .folder-outer > ul {
    overflow: hidden;
    margin-left: 6px;
    padding-left: 0.8rem;
    border-left: 1px solid var(--lightgray);
  }
}

.folder-container {
  flex-direction: row;
  display: flex;
  align-items: center;
  user-select: none;

  .folder-title { // Folder links
    color: var(--folder-text-color);
    font-family: var(--bodyFont);
    font-weight: 800; // ExtraBold
    line-height: 1.5rem;
    display: inline-block;
    padding-left: 0.8em;
    margin-left: -7px;

    &:hover {
      color: var(--folder-text-active-color) !important;
    }
  }

  & div > button {
    color: var(--dark);
    background-color: transparent;
    border: none;
    text-align: left;
    cursor: pointer;
    padding-left: 0;
    padding-right: 0;
    display: flex;
    align-items: center;
    font-family: var(--bodyFont);

    & span {
      font-size: 0.95rem;
      display: inline-block;
      color: var(--secondary);
      margin: 0;
      line-height: 1.5rem;
      pointer-events: none;
    }
  }
}

.folder-icon {
  color: var(--folder-icon-open-color);
  cursor: pointer;
  transition: transform 0.3s ease;
  backface-visibility: visible;
  flex-shrink: 0;
  height: 14px;
  width: 14px;
}

li:has(> .folder-outer:not(.open)) > .folder-container > svg {
  color: var(--folder-icon-color);
  &:hover {
    color: var(--file-text-active-color);
  }
}

.folder-icon:hover {
  color: var(--file-text-active-color);
}

.explorer {
  @media all and ($mobile) {
    &.collapsed {
      flex: 0 0 34px;

      & > .explorer-content {
        transform: translateX(-100vw);
        visibility: hidden;
      }
    }

    &:not(.collapsed) {
      flex: 0 0 34px;

      & > .explorer-content {
        transform: translateX(0);
        visibility: visible;
      }
    }

    .explorer-content {
      box-sizing: border-box;
      z-index: 100;
      position: absolute;
      top: 0;
      left: 0;
      margin-top: 0;
      background-color: var(--light);
      max-width: 100vw;
      width: 100%;
      transform: translateX(-100vw);
      transition:
        transform 200ms ease,
        visibility 200ms ease;
      overflow: hidden;
      padding: 4rem 0 2rem 0;
      height: 100dvh;
      max-height: 100dvh;
      visibility: hidden;
    }

    .mobile-explorer {
      margin: 0;
      padding: 5px;
      z-index: 101;

      .lucide-menu {
        stroke: var(--darkgray);
      }
    }
  }
}

.mobile-no-scroll {
  @media all and ($mobile) {
    overflow: hidden;
  }
}
